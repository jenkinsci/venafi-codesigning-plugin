variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

image: maven:3.3.9-jdk-8

# Cache downloaded dependencies and plugins between builds.
cache:
  key: "$CI_JOB_NAME"
  paths:
    - .m2/repository

verify:
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS verify'

# To deploy packages from CI, create a ci_settings.xml file
deploy:
  stage: deploy
  script:
    #- if [ ! -f ci_settings.xml ];
    #    then echo "CI settings missing\! If deploying to GitLab Maven Repository, please see https://docs.gitlab.com/ee/user/project/packages/maven_repository.html#creating-maven-packages-with-gitlab-cicd for instructions.";
    #  fi
    #- 'mvn $MAVEN_CLI_OPTS deploy -s ci_settings.xml'
    - 'echo "TODO: not yet implemented"'
  only:
    - master
